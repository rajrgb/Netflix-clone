{"version":3,"sources":["requests.js","axios.js","Row.js","Banner.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","console","log","get","request","data","results","fetchData","className","map","movie","poster_path","backdrop_path","onClick","movieTrailer","name","original_name","then","url","urlParams","URLSearchParams","URL","search","catch","error","handleClick","src","alt","id","videoId","opts","height","width","playerVars","autoplay","Banner","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","overview","slice","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3be5c353.chunk.js","sourcesContent":["const API_KEY = \"9f7faad4a6a447511edb4056c0e4459f\";\r\n\r\nconst requests = {\r\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n    fetchTopRated: `/movie/top_rated/?api_key=${API_KEY}&language=en-US`,\r\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n}\r\n\r\nexport default requests;","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3\",\r\n});\r\n\r\nexport default instance;","import axios from \"./axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"./Row.css\";\r\nimport YouTube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\";\r\n\r\nfunction Row({ title, fetchUrl,isLargeRow}) {\r\n    const base_url = \"https://image.tmdb.org/t/p/original\";\r\n    const [movies, setMovies] = useState([]);\r\n    const [trailerUrl,setTrailerUrl]=useState(\"\");\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            console.log(fetchUrl)\r\n            const request = await axios.get(fetchUrl);\r\n            setMovies(request.data.results);\r\n            return request;\r\n        }\r\n        fetchData();\r\n    }, [fetchUrl]);\r\n\r\n    console.log(movies);\r\n    const opts={\r\n        height: \"390\",\r\n        width: \"100%\",\r\n        playerVars: {\r\n            autoplay: 1,\r\n        }\r\n    };\r\n    const handleClick=(movie)=>{\r\n        if(trailerUrl){\r\n            setTrailerUrl('');\r\n        }\r\n        else{\r\n            movieTrailer( movie?.title||movie?.name||movie?.original_name)\r\n            .then(url=>{\r\n                const urlParams=new URLSearchParams(new URL(url).search);\r\n                setTrailerUrl(urlParams.get('v'));\r\n\r\n            }).catch(error=>console.log(error));\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"row\">\r\n            <h2 className= \"heading\">{title}</h2>\r\n            <div className=\"row_posters\">\r\n                {movies.map((movie) => {\r\n                    if (movie.poster_path&&movie.backdrop_path)\r\n                        return (\r\n                            <img key={movie.id} onClick={()=>handleClick(movie)} className={`poster ${isLargeRow && \"posterLarge\"}`} src={base_url + (isLargeRow?movie.poster_path:movie.backdrop_path)} alt={movie.name}/>\r\n                        )\r\n                })\r\n                }\r\n                </div>\r\n                {trailerUrl && <YouTube videoId={trailerUrl} opts={opts}/>}\r\n        </div>)\r\n}\r\n\r\nexport default Row;\r\n\r\n","import React,{useState,useEffect} from \"react\";\r\nimport axios from './axios';\r\nimport requests from './requests';\r\nimport './Banner.css';\r\n\r\nfunction Banner(){\r\n    const [movie,setMovie]=useState([]);\r\n    useEffect(()=>{\r\n                async function fetchData(){\r\n                const request=await axios.get(requests.fetchNetflixOriginals);   \r\n                setMovie(\r\n                    request.data.results[\r\n                        Math.floor(Math.random()*request.data.results.length-1)\r\n                    ]\r\n                )              \r\n                }\r\n                fetchData();\r\n            },[]\r\n            );\r\n            console.log(movie);\r\n            \r\n    return(\r\n        <header className=\"banner\"\r\n        style={{\r\n            backgroundSize: \"cover\",\r\n            backgroundImage: `url(\r\n                \"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\r\n            backgroundPosition: \"center center\"\r\n        }}\r\n        >\r\n        <div className=\"banner__contents\">\r\n        <h1 className=\"banner__title\">\r\n            {movie?.title||movie?.name||movie?.original_name}\r\n        </h1>\r\n        <div className=\"banner__buttons\">\r\n            <button className=\"banner__button\">Play</button>\r\n            <button className=\"banner__button\">My List</button>\r\n        </div>\r\n        <h1 className=\"banner__description\">{movie&&movie.overview?'...........'+movie.overview.slice(10,150)+' ...........': ''}</h1>\r\n        </div>\r\n        <div className=\"banner--fadeBottom\"></div>\r\n        </header>\r\n        )\r\n}\r\nexport default Banner;","import React, { useState,useEffect } from 'react';\r\nimport './Nav.css';\r\n\r\nfunction Nav() {\r\n    const [show, handleShow]=useState(false);\r\n\r\n    useEffect(()=>{\r\n      window.addEventListener(\"scroll\",()=>{\r\n         if(window.scrollY>100){\r\n           handleShow(true)\r\n         } else handleShow(false);\r\n      });\r\n      return ()=>{\r\n          window.removeEventListener(\"scroll\");\r\n      };\r\n    },[]);\r\n\r\n    return (\r\n        <div className={`nav ${show && \"nav__black\"}`}>\r\n            <img \r\n            className=\"nav__logo\"\r\n            src=\"https://upload.wikimedia.org/wikipedia/commons/7/7a/Logonetflix.png\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav;\r\n","import React from \"react\";\nimport requests from \"./requests\";\nimport Row from \"./Row\";\nimport './App.css';\nimport Banner from './Banner';\nimport Nav from './Nav'\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Nav />\n      <Banner />\n      <Row title=\"NETFLIX ORIGINALS\" fetchUrl={requests.fetchNetflixOriginals} isLargeRow/>\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} />\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies} />\n      <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries} />\n    </div>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}